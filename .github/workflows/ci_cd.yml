name: CI

on:
  workflow_dispatch:
  schedule: # UTC at 0300
    - cron: "0 3 * * *"
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main

env:
  PYMECHANICAL_VERSION: '23.2'
  RESET_EXAMPLES_CACHE: 0
  RESET_DOC_BUILD_CACHE: 0

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write
  packages: read

jobs:

  style:
    name: Code style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip tox
      - name: Test with tox
        run: tox -e style

  doc-style:
    name: Documentation Style Check
    runs-on: ubuntu-latest
    steps:
      - name: PyAnsys documentation style checks
        uses: pyansys/actions/doc-style@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  doc-build:
    name: Documentation building
    # Switch to ubuntu-latest when experimenting with the pipeline.
    # The doc build mostly works there but running mechanical is extremely slow (5 hours for one simple example).
    runs-on: public-ubuntu-latest-8-cores
    # runs-on: ubuntu-latest
    container:
      image: ghcr.io/pyansys/pymechanical/mechanical:v23.2.0
      options: --entrypoint /bin/bash
    #needs: [style, doc-style] # uncomment when code style vale check is fixed.
    needs: []

    steps:
      - name: Install system dependencies
        run: |
          apt update
          apt install -y sudo curl lsb-release python3-pip python-is-python3
          apt install -y zip pandoc libgl1-mesa-glx mesa-utils xvfb texlive-latex-extra latexmk nodejs npm graphviz
          # pip install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org
          npm install -g @mermaid-js/mermaid-cli

      - name: "Install Git and checkout project"
        uses: actions/checkout@v3

      - name: Install Python requirements
        run: pip install -r requirements/requirements_doc.txt

      # - name: Test virtual framebuffer
      #  run: |
      #    xvfb-run python .ci/display_test.py

      - name: Retrieve PyMechanial version
        run: |
          echo "PYMECHANICAL_VERSION=$(python -c 'from ansys.mechanical.core import __version__; print(__version__)')" >> $GITHUB_ENV
          echo "PyMechanical version is: $(python -c "from ansys.mechanical.core import __version__; print(__version__)")"
        id: version

      - name: Cache Basic examples
        uses: actions/cache@v3
        with:
          path: doc/source/basic
          key: Examples-v${{ env.RESET_EXAMPLES_CACHE }}-${{ env.PYMECHANICAL_VERSION }}-${{ github.sha }}
          restore-keys: |
            Examples-v${{ env.RESET_EXAMPLES_CACHE }}-${{ env.PYMECHANICAL_VERSION }}

      - name: "Cache docs build directory"
        uses: actions/cache@v3
        with:
          path: doc/_build
          key: doc-build-v${{ env.RESET_DOC_BUILD_CACHE }}-${{ env.PYMECHANICAL_VERSION }}-${{ github.sha }}
          restore-keys: |
            doc-build-v${{ env.RESET_DOC_BUILD_CACHE }}-${{ env.PYMECHANICAL_VERSION }}

      - name: build doc
        env:
          SPHINXOPTS: '-j auto'
          ANSYS_WORKBENCH_LOGGING_FILTER_LEVEL: 2
        run: |
          /install/ansys_inc/v232/aisol/.workbench_lite xvfb-run make -C doc html
          /install/ansys_inc/v232/aisol/.workbench_lite xvfb-run make -C doc pdf

      - name: Upload HTML Documentation
        uses: actions/upload-artifact@v3
        with:
          name: documentation-html
          path: doc/_build/html
          retention-days: 7

      - name: Deploy
        if: contains(github.ref, 'refs/heads/main')
        uses: JamesIves/github-pages-deploy-action@v4.4.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages
          folder: doc/_build/html
          clean: true
          single-commit: true

      - name: Build PDF Documentation
        working-directory: doc
        run: make pdf

      - name: Upload PDF Documentation
        uses: actions/upload-artifact@v3
        with:
          name: documentation-pdf
          path: doc/_build/latex/pymapdl*.pdf
          retention-days: 7

      - name: Display files structure
        if: always()
        run: |
          mkdir logs-build-docs
          echo "::group:: Display files structure" && ls -R && echo "::endgroup::"
          ls -R > ./logs-build-docs/files_structure.txt

  release:
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    needs: [style, doc-build] #docs-style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3

      - name: Display structure of downloaded files
        run: ls -R

      - name: Zip HTML documentation
        uses: vimtor/action-zip@v1.1
        with:
          files: documentation-html
          dest: documentation-html.zip

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          files: |
            ./documentation-html.zip
            ./documentation-pdf/*.pdf
